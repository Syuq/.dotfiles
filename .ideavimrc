" Use ctrl-c as an ide shortcut in normal and visual modes
sethandler <C-C> n-v:ide i:vim

" sethandler <C-A> a:vim
" sethandler <C-F> a:vim
" sethandler <C-K> a:vim
" sethandler <C-P> a:vim
" sethandler <C-V> a:vim
" sethandler <C-W> a:vim
" sethandler <C-]> a:vim

let mapleader=" "

""" Plugins  --------------------------------
set surround
set multiple-cursors
set commentary
set argtextobj
set easymotion
set textobj-entire
set ReplaceWithRegister
set exchange
" Trying the new syntax
" Plug "machakann/vim-highlightedyank"

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

" <C-n> seems to me as a better solution than <M-n>,
" but we should finally support vim-visual-multi because vim-multiple-cursors is deprecated now
map <C-n> <Plug>NextWholeOccurrence

""" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu
set relativenumber

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Copy to clipboard
set clipboard=unnamed

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray

""" My Mappings -----------------------------
map <leader>f <Plug>(easymotion-s)
map <leader>e <Plug>(easymotion-f)

map <leader>d <Action>(Debug)
map <leader>r <Action>(RenameElement)
map <leader>c <Action>(Stop)
map <leader>z <Action>(ToggleDistractionFreeMode)

map <leader>s <Action>(SelectInProjectView)
map <leader>a <Action>(Annotate)
map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
map <S-Space> <Action>(GotoNextError)

" Reformat the current line only
map <leader>l V<Action>(ReformatCode)

map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>o <Action>(FileStructurePopup)

map <leader>J Ji <ESC>

" Just makes me nervous
" map H h

" Toggle case and start typing. E.g. `<leader>iget`: `property` -> `getProperty`
map <leader>i ~hi
" Remove selection and toggle case. E.g. `v2l<leader>u`: `getProperty` -> `property`
vmap <leader>u d~h

" I think it's a better solution
map U <C-R>
